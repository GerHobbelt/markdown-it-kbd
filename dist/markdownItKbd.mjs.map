{"version":3,"file":"markdownItKbd.mjs","sources":["../index.js"],"sourcesContent":["// [[kbd]]\n//\n\nlet options = {\n  MARKER_OPEN: '[[',\n  MARKER_CLOSE: ']]',\n  TAG: 'kbd',\n\n  // intern use; derived at time of initialization:\n  MARKER_OPEN_1ST_CHR: 0\n};\n\nfunction tokenize(state, silent) {\n  if (silent) {\n    return false;\n  }\n\n  let start = state.pos;\n  const max = state.posMax;\n  let momChar = state.src.charCodeAt(start);\n\n  // we're looking for two times the open symbol.\n  if (momChar !== options.MARKER_OPEN_1ST_CHR) {\n    return false;\n  }\n  let src = state.src.slice(start);\n  if (!src.startsWith(options.MARKER_OPEN)) {\n    return false;\n  }\n  const startLen = options.MARKER_OPEN.length;\n  start += startLen;\n  src = src.slice(startLen);\n\n  // find the end sequence\n  let end = src.indexOf(options.MARKER_CLOSE);\n  if (end < 0) {\n    // no end marker found,\n    // input ended before closing sequence\n    return false;\n  }\n  let lf = src.indexOf('\\n');\n  if (lf >= 0 && lf < end) {\n    // found end of line before the end sequence. Thus, ignore our start sequence!\n    return false;\n  }\n  let second = src.indexOf(options.MARKER_OPEN);\n  if (second >= 0 && second < end) {\n    // found another opening sequence before the end. Thus, ignore ours!\n    return false;\n  }\n\n  // make end position into absolute index\n  end += start;\n\n  // start tag\n  state.push('kbd_open', options.TAG, 1);\n  // parse inner\n  state.pos = start;\n  state.posMax = end;\n  state.md.inline.tokenize(state);\n  state.pos = end + options.MARKER_CLOSE.length;\n  state.posMax = max;\n  // end tag\n  state.push('kbd_close', options.TAG, -1);\n\n  return true;\n}\n\nexport default function kbdplugin(markdownit, opts) {\n  options = Object.assign(options, opts);\n  options.MARKER_OPEN_1ST_CHR = options.MARKER_OPEN.charCodeAt(0);\n\n  markdownit.inline.ruler.before('link', 'kbd', tokenize);\n}\n"],"names":["options","MARKER_OPEN","MARKER_CLOSE","TAG","MARKER_OPEN_1ST_CHR","tokenize","state","silent","start","pos","max","posMax","momChar","src","charCodeAt","slice","startsWith","startLen","length","end","indexOf","lf","second","push","md","inline","kbdplugin","markdownit","opts","Object","assign","ruler","before"],"mappings":"AAAA;AACA;AAEA,IAAIA,OAAO,GAAG;AACZC,EAAAA,WAAW,EAAE,IADD;AAEZC,EAAAA,YAAY,EAAE,IAFF;AAGZC,EAAAA,GAAG,EAAE,KAHO;AAKZ;AACAC,EAAAA,mBAAmB,EAAE;AANT,CAAd;;AASA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/B,MAAIA,MAAJ,EAAY;AACV,WAAO,KAAP;AACD;;AAED,MAAIC,KAAK,GAAGF,KAAK,CAACG,GAAlB;AACA,QAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAlB;AACA,MAAIC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUC,UAAV,CAAqBN,KAArB,CAAd,CAP+B;;AAU/B,MAAII,OAAO,KAAKZ,OAAO,CAACI,mBAAxB,EAA6C;AAC3C,WAAO,KAAP;AACD;;AACD,MAAIS,GAAG,GAAGP,KAAK,CAACO,GAAN,CAAUE,KAAV,CAAgBP,KAAhB,CAAV;;AACA,MAAI,CAACK,GAAG,CAACG,UAAJ,CAAehB,OAAO,CAACC,WAAvB,CAAL,EAA0C;AACxC,WAAO,KAAP;AACD;;AACD,QAAMgB,QAAQ,GAAGjB,OAAO,CAACC,WAAR,CAAoBiB,MAArC;AACAV,EAAAA,KAAK,IAAIS,QAAT;AACAJ,EAAAA,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAUE,QAAV,CAAN,CAnB+B;;AAsB/B,MAAIE,GAAG,GAAGN,GAAG,CAACO,OAAJ,CAAYpB,OAAO,CAACE,YAApB,CAAV;;AACA,MAAIiB,GAAG,GAAG,CAAV,EAAa;AACX;AACA;AACA,WAAO,KAAP;AACD;;AACD,MAAIE,EAAE,GAAGR,GAAG,CAACO,OAAJ,CAAY,IAAZ,CAAT;;AACA,MAAIC,EAAE,IAAI,CAAN,IAAWA,EAAE,GAAGF,GAApB,EAAyB;AACvB;AACA,WAAO,KAAP;AACD;;AACD,MAAIG,MAAM,GAAGT,GAAG,CAACO,OAAJ,CAAYpB,OAAO,CAACC,WAApB,CAAb;;AACA,MAAIqB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAGH,GAA5B,EAAiC;AAC/B;AACA,WAAO,KAAP;AACD,GArC8B;;;AAwC/BA,EAAAA,GAAG,IAAIX,KAAP,CAxC+B;;AA2C/BF,EAAAA,KAAK,CAACiB,IAAN,CAAW,UAAX,EAAuBvB,OAAO,CAACG,GAA/B,EAAoC,CAApC,EA3C+B;;AA6C/BG,EAAAA,KAAK,CAACG,GAAN,GAAYD,KAAZ;AACAF,EAAAA,KAAK,CAACK,MAAN,GAAeQ,GAAf;AACAb,EAAAA,KAAK,CAACkB,EAAN,CAASC,MAAT,CAAgBpB,QAAhB,CAAyBC,KAAzB;AACAA,EAAAA,KAAK,CAACG,GAAN,GAAYU,GAAG,GAAGnB,OAAO,CAACE,YAAR,CAAqBgB,MAAvC;AACAZ,EAAAA,KAAK,CAACK,MAAN,GAAeD,GAAf,CAjD+B;;AAmD/BJ,EAAAA,KAAK,CAACiB,IAAN,CAAW,WAAX,EAAwBvB,OAAO,CAACG,GAAhC,EAAqC,CAAC,CAAtC;AAEA,SAAO,IAAP;AACD;;AAEc,SAASuB,SAAT,CAAmBC,UAAnB,EAA+BC,IAA/B,EAAqC;AAClD5B,EAAAA,OAAO,GAAG6B,MAAM,CAACC,MAAP,CAAc9B,OAAd,EAAuB4B,IAAvB,CAAV;AACA5B,EAAAA,OAAO,CAACI,mBAAR,GAA8BJ,OAAO,CAACC,WAAR,CAAoBa,UAApB,CAA+B,CAA/B,CAA9B;AAEAa,EAAAA,UAAU,CAACF,MAAX,CAAkBM,KAAlB,CAAwBC,MAAxB,CAA+B,MAA/B,EAAuC,KAAvC,EAA8C3B,QAA9C;AACD;;;;"}